{"ast":null,"code":"var _jsxFileName = \"/Users/benjaminstafford/Desktop/task-manager/client/src/components/Task.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Input } from 'reactstrap';\n\nconst Task = props => {\n  const [toggleEdit, setToggleEdit] = useState(false);\n  const [title, setTitle] = useState(props.task.title);\n  const [category, setCategory] = useState(props.task.category);\n  const [important, setImportant] = useState(props.task.category);\n\n  const onChangeTitle = event => {\n    setTitle(event.target.value);\n  };\n\n  const onChangeCategory = event => {\n    setCategory(event.target.value);\n  };\n\n  const onChangeImportant = event => {\n    setImportant(event.target.value);\n  };\n\n  const onClick = event => {};\n\n  if (toggleEdit) return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, props.task.id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, props.task.title), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, props.task.category), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, props.task.date), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, props.task.important), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: toggleEdit ? 'true' : 'false',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, \"Edit\")));else return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, props.task.id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    value: title,\n    onChange: onChangeTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    value: category,\n    onChange: onChangeCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    hidden: true,\n    defaultValue: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, \"Select\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, \"Printing\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, \"Updating\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, \"Networking/Internet\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, \"Other\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, props.task.date), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, props.task.time), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"checkbox\",\n    check: important ? 'true' : 'false',\n    onChange: onChangeImportant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: toggleEdit ? 'true' : 'false',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, \"Edit\")));\n};\n\nTask.propTypes = {\n  task: PropTypes.object.isRequired\n};\nexport default Task;","map":{"version":3,"sources":["/Users/benjaminstafford/Desktop/task-manager/client/src/components/Task.js"],"names":["React","useState","PropTypes","Button","Input","Task","props","toggleEdit","setToggleEdit","title","setTitle","task","category","setCategory","important","setImportant","onChangeTitle","event","target","value","onChangeCategory","onChangeImportant","onClick","id","date","time","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,YAA9B;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAEpB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAACK,KAAK,CAACK,IAAN,CAAWF,KAAZ,CAAlC;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAACK,KAAK,CAACK,IAAN,CAAWC,QAAZ,CAAxC;AACA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAACK,KAAK,CAACK,IAAN,CAAWC,QAAZ,CAA1C;;AAEA,QAAMI,aAAa,GAAIC,KAAD,IAAW;AAC7BP,IAAAA,QAAQ,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACH,GAFD;;AAIA,QAAMC,gBAAgB,GAAIH,KAAD,IAAW;AAChCJ,IAAAA,WAAW,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACH,GAFD;;AAIA,QAAME,iBAAiB,GAAIJ,KAAD,IAAW;AACjCF,IAAAA,YAAY,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AACH,GAFD;;AAIA,QAAMG,OAAO,GAAIL,KAAD,IAAW,CAE1B,CAFD;;AAIA,MAAGV,UAAH,EACI,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,KAAK,CAACK,IAAN,CAAWY,EAAhB,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKjB,KAAK,CAACK,IAAN,CAAWF,KAAhB,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,KAAK,CAACK,IAAN,CAAWC,QAAhB,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKN,KAAK,CAACK,IAAN,CAAWa,IAAhB,CAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKlB,KAAK,CAACK,IAAN,CAAWG,SAAhB,CALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAGP,UAAD,GAAe,MAAf,GAAuB,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CANJ,CADJ,CADJ,KAcI,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,KAAK,CAACK,IAAN,CAAWY,EAAhB,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEd,KAA1B;AACI,IAAA,QAAQ,EAAEO,aADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAEJ,QAA5B;AACI,IAAA,QAAQ,EAAEQ,gBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAGQ;AAAQ,IAAA,MAAM,MAAd;AAAe,IAAA,YAAY,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHR,eAIQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJR,eAKQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALR,eAMQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BANR,eAOQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPR,CANJ,eAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKd,KAAK,CAACK,IAAN,CAAWa,IAAhB,CAfJ,eAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKlB,KAAK,CAACK,IAAN,CAAWc,IAAhB,CAhBJ,eAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,KAAK,EAAEX,SAAS,GAAG,MAAH,GAAY,OAAnD;AACI,IAAA,QAAQ,EAAEO,iBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAjBJ,eAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAGd,UAAD,GAAe,MAAf,GAAuB,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CArBJ,CADJ;AA4BP,CAjED;;AAmEAF,IAAI,CAACqB,SAAL,GAAiB;AACbf,EAAAA,IAAI,EAAET,SAAS,CAACyB,MAAV,CAAiBC;AADV,CAAjB;AAIA,eAAevB,IAAf","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Input } from 'reactstrap'\n\nconst Task = (props) => {\n\n    const [toggleEdit, setToggleEdit] = useState(false)\n    const [title, setTitle] = useState(props.task.title)\n    const [category, setCategory] = useState(props.task.category)\n    const [important, setImportant] = useState(props.task.category)\n\n    const onChangeTitle = (event) => {\n        setTitle(event.target.value)\n    }\n\n    const onChangeCategory = (event) => {\n        setCategory(event.target.value)\n    }\n\n    const onChangeImportant = (event) => {\n        setImportant(event.target.value)\n    }\n\n    const onClick = (event) => {\n\n    }\n\n    if(toggleEdit)\n        return (\n            <tr>\n                <td>{props.task.id}</td>\n                <td>{props.task.title}</td>\n                <td>{props.task.category}</td>\n                <td>{props.task.date}</td>\n                <td>{props.task.important}</td>\n                <td>\n                    <Button outline={(toggleEdit) ? 'true': 'false'}>Edit</Button>\n                </td>\n            </tr>\n        )\n    else\n        return (\n            <tr>\n                <td>{props.task.id}</td>\n                <td>\n                    <Input type=\"text\" value={title}\n                        onChange={onChangeTitle} />\n                </td>\n                <td>\n                    <Input type=\"select\" value={category}\n                        onChange={onChangeCategory} />\n                        <option hidden defaultValue>Select</option>\n                        <option>Printing</option>\n                        <option>Updating</option>\n                        <option>Networking/Internet</option>\n                        <option>Other</option>\n                </td>\n                <td>{props.task.date}</td>\n                <td>{props.task.time}</td>\n                <td>\n                    <Input type=\"checkbox\" check={important ? 'true' : 'false'}\n                        onChange={onChangeImportant} />\n                </td>\n                <td>\n                    <Button outline={(toggleEdit) ? 'true': 'false'}>Edit</Button>\n                </td>\n            </tr>\n        )\n\n}\n\nTask.propTypes = {\n    task: PropTypes.object.isRequired\n}\n\nexport default Task"]},"metadata":{},"sourceType":"module"}