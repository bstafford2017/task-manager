{"ast":null,"code":"import { GET_TASKS, ADD_TASK, DELETE_TASK, TASKS_LOADING } from '../actions/types';\nconst initialState = {\n  tasks: [],\n  loading: false\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_TASKS:\n      return { ...state,\n        tasks: action.payload,\n        loading: false\n      };\n\n    case ADD_TASK:\n      return { ...state,\n        tasks: [...state.tasks, action.payload]\n      };\n\n    case DELETE_TASK:\n      return { ...state,\n        tasks: state.tasks.filter(task => task.id !== action.payload)\n      };\n\n    case TASKS_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    default:\n      return { ...state\n      };\n  }\n}","map":{"version":3,"sources":["/Users/benjaminstafford/Desktop/task-manager/client/src/reducers/taskReducer.js"],"names":["GET_TASKS","ADD_TASK","DELETE_TASK","TASKS_LOADING","initialState","tasks","loading","state","action","type","payload","filter","task","id"],"mappings":"AAAA,SACIA,SADJ,EAEIC,QAFJ,EAGIC,WAHJ,EAIIC,aAJJ,QAKO,kBALP;AAOA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,OAAO,EAAE;AAFQ,CAArB;AAKA,eAAe,UAASC,KAAK,GAAGH,YAAjB,EAA+BI,MAA/B,EAAuC;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,SAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHF,QAAAA,KAAK,EAAEG,MAAM,CAACE,OAFX;AAGHJ,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKL,QAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHF,QAAAA,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAV,EAAiBG,MAAM,CAACE,OAAxB;AAFJ,OAAP;;AAIJ,SAAKR,WAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYM,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACE,OAA9C;AAFJ,OAAP;;AAIJ,SAAKP,aAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHD,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAIJ;AACI,aAAO,EACH,GAAGC;AADA,OAAP;AAvBR;AA2BH","sourcesContent":["import {\n    GET_TASKS,\n    ADD_TASK,\n    DELETE_TASK,\n    TASKS_LOADING\n} from '../actions/types'\n\nconst initialState = {\n    tasks: [],\n    loading: false\n}\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case GET_TASKS:\n            return {\n                ...state,\n                tasks: action.payload,\n                loading: false\n            }\n        case ADD_TASK:\n            return {\n                ...state,\n                tasks: [...state.tasks, action.payload]\n            }\n        case DELETE_TASK:\n            return {\n                ...state,\n                tasks: state.tasks.filter(task => task.id !== action.payload)\n            }\n        case TASKS_LOADING:\n            return {\n                ...state,\n                loading: true\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}"]},"metadata":{},"sourceType":"module"}