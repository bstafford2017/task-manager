{"ast":null,"code":"var _jsxFileName = \"/Users/benjaminstafford/Desktop/task-manager/client/src/components/Create.js\";\nimport React, { useState } from 'react';\nimport { Col, Card, CardHeader, CardBody, Form, FormGroup, FormText, Label, Input, Alert, Button, CardFooter } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addTask } from '../actions/taskActions';\n\nconst Create = props => {\n  // Array destructuring\n  const [task, setTask] = useState({\n    title: '',\n    category: '',\n    description: '',\n    important: false\n  });\n  const [alert, setAlert] = useState({\n    display: false,\n    msg: '',\n    color: ''\n  });\n\n  const onDismiss = () => setVisible(false);\n\n  const onChangeTitle = event => {\n    setTask({ ...task,\n      title: event.target.value\n    });\n  };\n\n  const onChangeCategory = event => {\n    setTask({ ...task,\n      category: event.target.value\n    });\n  };\n\n  const onChangeDescription = event => {\n    setTask({ ...task,\n      description: event.target.value\n    });\n  };\n\n  const onChangeImportant = event => {\n    setTask({ ...task,\n      important: event.target.checked\n    });\n  };\n\n  const onChangeFile = event => {\n    setTask({ ...task,\n      file: event.target.value\n    });\n  };\n\n  const onSubmit = async event => {\n    if (Object.values(task).some(field => !field)) {\n      setAlert({\n        display: true,\n        msg: 'Please fill out the entire form with valid entries.',\n        color: 'danger'\n      });\n    } else {\n      props.addTask(task);\n      setAlert({\n        display: true,\n        msg: 'Successfully submitted task!',\n        color: 'success'\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Col, {\n    xs: {\n      size: 12\n    },\n    sm: {\n      size: 6,\n      offset: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, \"Create a Task\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    isOpen: alert.display,\n    color: alert.color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, alert.msg), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    id: \"title\",\n    value: task.title,\n    onChange: onChangeTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    id: \"category\",\n    value: task.category,\n    onChange: onChangeCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    hidden: true,\n    defaultValue: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 33\n    }\n  }, \"Select\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 33\n    }\n  }, \"Printing\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 33\n    }\n  }, \"Updating\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 33\n    }\n  }, \"Networking/Internet\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 33\n    }\n  }, \"Other\"))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    id: \"description\",\n    value: task.description,\n    onChange: onChangeDescription,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, \"Image\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"file\",\n    id: \"file\",\n    onChange: onChangeFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(FormText, {\n    color: \"muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  }, \"This is optional\")), /*#__PURE__*/React.createElement(FormGroup, {\n    check: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    check: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"checkbox\",\n    value: task.important,\n    onChange: onChangeImportant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 33\n    }\n  }), ' ', \"Important\")))), /*#__PURE__*/React.createElement(CardFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"col-12 col-sm-4 offset-sm-4\",\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, \"Submit\"))));\n};\n\nCreate.propTypes = {\n  addTask: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  addTask\n})(Create);","map":{"version":3,"sources":["/Users/benjaminstafford/Desktop/task-manager/client/src/components/Create.js"],"names":["React","useState","Col","Card","CardHeader","CardBody","Form","FormGroup","FormText","Label","Input","Alert","Button","CardFooter","PropTypes","connect","addTask","Create","props","task","setTask","title","category","description","important","alert","setAlert","display","msg","color","onDismiss","setVisible","onChangeTitle","event","target","value","onChangeCategory","onChangeDescription","onChangeImportant","checked","onChangeFile","file","onSubmit","Object","values","some","field","size","offset","textAlign","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Col, Card, CardHeader, CardBody, \n    Form, FormGroup, FormText, Label, Input, Alert,\n    Button, \n    CardFooter} from 'reactstrap'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { addTask } from '../actions/taskActions'\n\nconst Create = (props) => {\n\n    // Array destructuring\n    const [task, setTask] = useState({\n        title: '',\n        category: '',\n        description: '',\n        important: false\n    })\n    const [alert, setAlert] = useState({\n        display: false,\n        msg: '',\n        color: ''\n    })\n\n    const onDismiss = () => setVisible(false);\n\n    const onChangeTitle = (event) => {\n        setTask({ ...task, title: event.target.value })\n    }\n\n    const onChangeCategory = (event) => {\n        setTask({ ...task, category: event.target.value })\n    }\n\n    const onChangeDescription = (event) => {\n        setTask({ ...task, description: event.target.value })\n    }\n\n    const onChangeImportant = (event) => {\n        setTask({ ...task, important: event.target.checked })\n    }\n\n    const onChangeFile = (event) => {\n        setTask({ ...task, file: event.target.value })\n    }\n\n    const onSubmit = async (event) => {\n        if(Object.values(task).some(field => !field)) {\n            setAlert({ \n                display: true,\n                msg: 'Please fill out the entire form with valid entries.',\n                color: 'danger'\n            })\n        } else {\n            props.addTask(task)\n            setAlert({ \n                display: true,\n                msg: 'Successfully submitted task!',\n                color: 'success'\n            })\n        }\n    }\n\n    return (\n        <Col xs={{ size: 12 }} sm={{ size: 6, offset: 3 }}>\n            <Card>\n                <CardHeader>\n                    <h3 style={{ textAlign: 'center' }}>Create a Task</h3>\n                </CardHeader>\n                <CardBody>\n                    <Form>\n                        <Alert isOpen={alert.display} color={alert.color}>{alert.msg}</Alert>\n                        <FormGroup>\n                            <Label for=\"title\">Title</Label>\n                            <Input type=\"text\" id=\"title\" value={task.title}\n                                onChange={onChangeTitle} />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"category\">Category</Label>\n                            <Input type=\"select\" id=\"category\" value={task.category}\n                                onChange={onChangeCategory}>\n                                <option hidden defaultValue>Select</option>\n                                <option>Printing</option>\n                                <option>Updating</option>\n                                <option>Networking/Internet</option>\n                                <option>Other</option>\n                            </Input>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"description\">Description</Label>\n                            <Input type=\"textarea\" id=\"description\" value={task.description}\n                                onChange={onChangeDescription} />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"file\">Image</Label>\n                            <Input type=\"file\" id=\"file\" onChange={onChangeFile} /> \n                            <FormText color=\"muted\">\n                            This is optional\n                            </FormText>      \n                        </FormGroup>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"checkbox\" value={task.important}\n                                    onChange={onChangeImportant} />{' '}\n                                Important\n                            </Label>\n                        </FormGroup>\n                    </Form>\n                </CardBody>\n                <CardFooter>\n                    <Button className=\"col-12 col-sm-4 offset-sm-4\" onClick={onSubmit}>Submit</Button>\n                </CardFooter>\n            </Card>\n        </Col>\n    )\n}\n\nCreate.propTypes = {\n    addTask: PropTypes.func.isRequired\n}\n\nexport default connect(null, { addTask })(Create)"]},"metadata":{},"sourceType":"module"}