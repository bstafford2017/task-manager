{"ast":null,"code":"var _jsxFileName = \"/Users/benjaminstafford/Desktop/task-manager/client/src/components/Settings.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Row, Col, Card, CardHeader, CardBody, Form, FormGroup, Label, Input, Alert, Button, CardFooter } from 'reactstrap';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { getUser } from '../actions/userActions';\n\nconst Settings = props => {\n  const [user, setUser] = useState({\n    username: '',\n    password: '',\n    confirmPassword: '',\n    firstName: '',\n    lastName: ''\n  });\n  const [alert, setAlert] = useState({\n    msg: '',\n    display: false,\n    color: ''\n  });\n\n  const onChangeUsername = event => {\n    setUser({ ...user,\n      username: event.target.value\n    });\n  };\n\n  const onChangePassword = event => {\n    setUser({ ...user,\n      password: event.target.value\n    });\n  };\n\n  const onChangeConfirmPassword = event => {\n    setUser({ ...user,\n      confirmPassword: event.target.value\n    });\n  };\n\n  const onChangeFirstName = event => {\n    setUser({ ...user,\n      firstName: event.target.value\n    });\n  };\n\n  const onChangeLastName = event => {\n    setUser({ ...user,\n      lastName: event.target.value\n    });\n  };\n\n  const onSubmit = async event => {\n    if (user.some(field => !field)) {\n      setAlert({\n        display: true,\n        msg: 'Please fill out the entire form with valid entries.',\n        color: 'danger'\n      });\n    } else {\n      if (user.password !== user.confirmPassword) {\n        setAlert({\n          display: true,\n          msg: 'Password do not match.',\n          color: 'danger'\n        });\n      } else {}\n    }\n  };\n\n  useEffect(() => {\n    props.getUser();\n  }, []);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: {\n      size: 12\n    },\n    md: {\n      size: 6,\n      offset: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, \"Settings\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    form: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    isOpen: alert.display,\n    color: alert.color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 37\n    }\n  }, alert.msg), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 41\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    id: \"username\",\n    value: user.username,\n    onChange: onChangeUsername,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 41\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    form: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 41\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    id: \"password\",\n    value: user.password,\n    onChange: onChangePassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"confirm-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 41\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    id: \"confirm-password\",\n    value: user.confirmPassword,\n    onChange: onChangeConfirmPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 41\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    form: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"first-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 41\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    id: \"first-name\",\n    value: user.firstName,\n    onChange: onChangeFirstName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"last-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 41\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    id: \"last-name\",\n    value: user.lastName,\n    onChange: onChangeLastName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 41\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    check: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    check: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 45\n    }\n  }), ' ', \"Administrator\")))))), /*#__PURE__*/React.createElement(CardFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"col-12 col-sm-2 offset-sm-2\",\n    onClick: onUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 25\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"col-12 col-sm-2 offset-sm-2\",\n    onClick: onDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 25\n    }\n  }, \"Delete\")))));\n};\n\nSettings.propTypes = {\n  getUser: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps, {\n  getUser\n})(Settings);","map":{"version":3,"sources":["/Users/benjaminstafford/Desktop/task-manager/client/src/components/Settings.js"],"names":["React","useState","useEffect","PropTypes","Container","Row","Col","Card","CardHeader","CardBody","Form","FormGroup","Label","Input","Alert","Button","CardFooter","axios","connect","getUser","Settings","props","user","setUser","username","password","confirmPassword","firstName","lastName","alert","setAlert","msg","display","color","onChangeUsername","event","target","value","onChangePassword","onChangeConfirmPassword","onChangeFirstName","onChangeLastName","onSubmit","some","field","size","offset","textAlign","onUpdate","onDelete","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { Container, Row, Col, Card, CardHeader, \n    CardBody, Form, FormGroup, Label, Input, Alert,\n    Button, \n    CardFooter} from 'reactstrap'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport { getUser } from '../actions/userActions'\n\nconst Settings = (props) => {\n\n    const [user, setUser] = useState({\n        username: '',\n        password: '',\n        confirmPassword: '',\n        firstName: '',\n        lastName: ''\n    })\n    const [alert, setAlert] = useState({\n        msg: '',\n        display: false,\n        color: ''\n    })\n\n    const onChangeUsername = (event) => {\n        setUser({ ...user, username: event.target.value })\n    }\n\n    const onChangePassword = (event) => {\n        setUser({ ...user, password: event.target.value })\n    }\n\n    const onChangeConfirmPassword = (event) => {\n        setUser({ ...user, confirmPassword: event.target.value })\n    }\n\n    const onChangeFirstName = (event) => {\n        setUser({ ...user, firstName: event.target.value })\n    }\n\n    const onChangeLastName = (event) => {\n        setUser({ ...user, lastName: event.target.value })\n    }\n\n    const onSubmit = async (event) => {\n        if(user.some(field => !field)) {\n            setAlert({ \n                display: true,\n                msg: 'Please fill out the entire form with valid entries.',\n                color: 'danger'\n            })\n        } else {\n            if(user.password !== user.confirmPassword) {\n                setAlert({ \n                    display: true,\n                    msg: 'Password do not match.',\n                    color: 'danger'\n                })\n            } else {\n                \n            }\n        }\n    }\n\n    useEffect(() => {\n        props.getUser()\n    }, [])\n\n    return (\n        <Container>\n            <Col xs={{ size: 12 }} md={{ size: 6, offset: 3 }}>\n                <Card>\n                    <CardHeader>\n                        <h3 style={{ textAlign: 'center' }}>Settings</h3>\n                    </CardHeader>\n                    <CardBody>\n                        <Form>\n                            <Row form>\n                                <Col xs={12}>\n                                    <Alert isOpen={alert.display} color={alert.color}>{alert.msg}</Alert>\n                                    <FormGroup>\n                                        <Label for=\"username\">Username</Label>\n                                        <Input type=\"text\" id=\"username\" value={user.username} \n                                            onChange={onChangeUsername} />\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                            <Row form>\n                                <Col xs={12} md={6}>\n                                    <FormGroup>\n                                        <Label for=\"password\">Password</Label>\n                                        <Input type=\"password\" id=\"password\" value={user.password}\n                                            onChange={onChangePassword} />\n                                    </FormGroup>\n                                </Col>\n                                <Col xs={12} md={6}>\n                                    <FormGroup>\n                                        <Label for=\"confirm-password\">Confirm Password</Label>\n                                        <Input type=\"password\" id=\"confirm-password\" value={user.confirmPassword}\n                                            onChange={onChangeConfirmPassword} />\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                            <Row form>\n                                <Col xs={12} md={6}>\n                                    <FormGroup>\n                                        <Label for=\"first-name\">First Name</Label>\n                                        <Input type=\"text\" id=\"first-name\" value={user.firstName}\n                                            onChange={onChangeFirstName} />\n                                    </FormGroup>\n                                </Col>\n                                <Col xs={12} md={6}>\n                                    <FormGroup>\n                                        <Label for=\"last-name\">Last Name</Label>\n                                        <Input type=\"text\" id=\"last-name\" value={user.lastName}\n                                            onChange={onChangeLastName} />\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col xs={12}>\n                                    <FormGroup check>\n                                        <Label check>\n                                            <Input type=\"checkbox\" />{' '}\n                                            Administrator\n                                        </Label>\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </CardBody>\n                    <CardFooter>\n                        <Button\n                            className=\"col-12 col-sm-2 offset-sm-2\"\n                            onClick={onUpdate}>Update</Button>\n                        <Button\n                            className=\"col-12 col-sm-2 offset-sm-2\"\n                            onClick={onDelete}>Delete</Button>\n                    </CardFooter>\n                </Card>\n            </Col>\n        </Container>\n    )\n}\n\nSettings.propTypes = {\n    getUser: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps, { getUser })(Settings)"]},"metadata":{},"sourceType":"module"}