{"ast":null,"code":"var _jsxFileName = \"/Users/benjaminstafford/Desktop/task-manager/client/src/components/Settings.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col, Card, CardHeader, CardBody, Form, FormGroup, Label, Input, Alert, Button, CardFooter } from 'reactstrap';\nimport axios from 'axios';\nimport connect from 'react-redux';\nimport getUser from '../actions/userActions';\nimport userReducer from '../reducers/userReducer';\n\nconst Settings = () => {\n  const [user, setUser] = useState({\n    username: '',\n    password: '',\n    confirmPassword: '',\n    firstName: '',\n    lastName: ''\n  });\n  const [alert, setAlert] = useState({\n    msg: '',\n    display: false,\n    color: ''\n  });\n\n  const onChangeUsername = event => {\n    setUser({ ...user,\n      username: event.target.value\n    });\n  };\n\n  const onChangePassword = event => {\n    setUser({ ...user,\n      password: event.target.value\n    });\n  };\n\n  const onChangeConfirmPassword = event => {\n    setUser({ ...user,\n      confirmPassword: event.target.value\n    });\n  };\n\n  const onChangeFirstName = event => {\n    setUser({ ...user,\n      firstName: event.target.value\n    });\n  };\n\n  const onChangeLastName = event => {\n    setUser({ ...user,\n      lastName: event.target.value\n    });\n  };\n\n  const onSubmit = async event => {\n    if (user.some(field => field)) {\n      setAlert({\n        display: true,\n        msg: 'Please fill out the entire form with valid entries.',\n        color: 'danger'\n      });\n    }\n\n    try {\n      const response = await axios({\n        method: 'POST',\n        url: '/api/users',\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/json'\n        },\n        data: {\n          username: user.username,\n          password: user.password,\n          firstName: user.firstName,\n          lastName: user.lastName,\n          admin: user.admin\n        }\n      });\n      setUser({ ...response.user,\n        confirmPassword: response.user.password\n      });\n    } catch (err) {\n      setAlert({\n        display: true,\n        msg: err.toString(),\n        color: 'danger'\n      });\n    }\n  };\n\n  useEffect(() => {\n    this.props.getUser(); // const fetchData = async () => {\n    //     try {\n    //         const response = await axios({\n    //             method: 'GET',\n    //             url: 'http://localhost:5000/api/users',\n    //             headers: {\n    //                 'Accept': 'application/json',\n    //                 'Content-type': 'application/json'\n    //             }\n    //         })\n    //         setUser({\n    //             ...response.user,\n    //             confirmPassword: response.user.password\n    //         })\n    //     } catch(err) {\n    //         setAlert({ \n    //             display: true,\n    //             msg: 'Error' + err.toString(),\n    //             color: 'danger'\n    //         })\n    //     }\n    // }\n    // fetchData()\n  }, []);\n  return /*#__PURE__*/React.createElement(Col, {\n    xs: {\n      size: 12\n    },\n    sm: {\n      size: 6,\n      offset: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, \"Settings\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    isOpen: alert.display,\n    color: alert.color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 33\n    }\n  }, alert.msg), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 37\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    id: \"username\",\n    value: user.username,\n    onChange: onChangeUsername,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    form: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 37\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    id: \"password\",\n    value: user.password,\n    onChange: onChangePassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"confirm-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 37\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    id: \"confirm-password\",\n    value: user.confirmPassword,\n    onChange: onChangeConfirmPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    form: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"first-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 37\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    id: \"first-name\",\n    value: user.firstName,\n    onChange: onChangeFirstName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"last-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 37\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    id: \"last-name\",\n    value: user.lastName,\n    onChange: onChangeLastName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    check: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    check: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 41\n    }\n  }), ' ', \"Administrator\")))))), /*#__PURE__*/React.createElement(CardFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"col-12 col-sm-4 offset-sm-4\",\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, \"Update\"))));\n};\n\nSettings.propTypes = {\n  getUser: PropTypes.funct.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps, {\n  getUser\n})(Settings);","map":{"version":3,"sources":["/Users/benjaminstafford/Desktop/task-manager/client/src/components/Settings.js"],"names":["React","useState","useEffect","PropTypes","Row","Col","Card","CardHeader","CardBody","Form","FormGroup","Label","Input","Alert","Button","CardFooter","axios","connect","getUser","userReducer","Settings","user","setUser","username","password","confirmPassword","firstName","lastName","alert","setAlert","msg","display","color","onChangeUsername","event","target","value","onChangePassword","onChangeConfirmPassword","onChangeFirstName","onChangeLastName","onSubmit","some","field","response","method","url","headers","data","admin","err","toString","props","size","offset","textAlign","propTypes","funct","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { Row, Col, Card, CardHeader, CardBody, \n    Form, FormGroup, Label, Input, Alert,\n    Button, \n    CardFooter} from 'reactstrap'\nimport axios from 'axios'\nimport connect from 'react-redux'\nimport getUser from '../actions/userActions'\nimport userReducer from '../reducers/userReducer'\n\nconst Settings = () => {\n\n    const [user, setUser] = useState({\n        username: '',\n        password: '',\n        confirmPassword: '',\n        firstName: '',\n        lastName: ''\n    })\n    const [alert, setAlert] = useState({\n        msg: '',\n        display: false,\n        color: ''\n    })\n\n    const onChangeUsername = (event) => {\n        setUser({ ...user, username: event.target.value })\n    }\n\n    const onChangePassword = (event) => {\n        setUser({ ...user, password: event.target.value })\n    }\n\n    const onChangeConfirmPassword = (event) => {\n        setUser({ ...user, confirmPassword: event.target.value })\n    }\n\n    const onChangeFirstName = (event) => {\n        setUser({ ...user, firstName: event.target.value })\n    }\n\n    const onChangeLastName = (event) => {\n        setUser({ ...user, lastName: event.target.value })\n    }\n\n    const onSubmit = async (event) => {\n        if(user.some(field => field)) {\n            setAlert({ \n                display: true,\n                msg: 'Please fill out the entire form with valid entries.',\n                color: 'danger'\n            })\n        }\n\n        try {\n            const response = await axios({\n                method: 'POST',\n                url: '/api/users',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-type': 'application/json'\n                },\n                data: {\n                    username: user.username,\n                    password: user.password,\n                    firstName: user.firstName,\n                    lastName: user.lastName,\n                    admin: user.admin,\n                }\n            })\n            setUser({\n                ...response.user,\n                confirmPassword: response.user.password\n            })\n        } catch(err) {\n            setAlert({ \n                display: true,\n                msg: err.toString(),\n                color: 'danger'\n            })\n        }\n    }\n\n    useEffect(() => {\n        this.props.getUser()\n        // const fetchData = async () => {\n        //     try {\n        //         const response = await axios({\n        //             method: 'GET',\n        //             url: 'http://localhost:5000/api/users',\n        //             headers: {\n        //                 'Accept': 'application/json',\n        //                 'Content-type': 'application/json'\n        //             }\n        //         })\n        //         setUser({\n        //             ...response.user,\n        //             confirmPassword: response.user.password\n        //         })\n        //     } catch(err) {\n        //         setAlert({ \n        //             display: true,\n        //             msg: 'Error' + err.toString(),\n        //             color: 'danger'\n        //         })\n        //     }\n        // }\n        // fetchData()\n    }, [])\n\n    return (\n        <Col xs={{ size: 12 }} sm={{ size: 6, offset: 3 }}>\n            <Card>\n                <CardHeader>\n                    <h3 style={{ textAlign: 'center' }}>Settings</h3>\n                </CardHeader>\n                <CardBody>\n                    <Form>\n                        <Row>\n                            <Col xs={12}>\n                                <Alert isOpen={alert.display} color={alert.color}>{alert.msg}</Alert>\n                                <FormGroup>\n                                    <Label for=\"username\">Username</Label>\n                                    <Input type=\"text\" id=\"username\" value={user.username} \n                                        onChange={onChangeUsername} />\n                                </FormGroup>\n                            </Col>\n                        </Row>\n                        <Row form>\n                            <Col xs={12} sm={6}>\n                                <FormGroup>\n                                    <Label for=\"password\">Password</Label>\n                                    <Input type=\"password\" id=\"password\" value={user.password}\n                                        onChange={onChangePassword} />\n                                </FormGroup>\n                            </Col>\n                            <Col xs={12} sm={6}>\n                                <FormGroup>\n                                    <Label for=\"confirm-password\">Confirm Password</Label>\n                                    <Input type=\"password\" id=\"confirm-password\" value={user.confirmPassword}\n                                        onChange={onChangeConfirmPassword} />\n                                </FormGroup>\n                            </Col>\n                        </Row>\n                        <Row form>\n                            <Col xs={12} sm={6}>\n                                <FormGroup>\n                                    <Label for=\"first-name\">First Name</Label>\n                                    <Input type=\"text\" id=\"first-name\" value={user.firstName}\n                                        onChange={onChangeFirstName} />\n                                </FormGroup>\n                            </Col>\n                            <Col xs={12} sm={6}>\n                                <FormGroup>\n                                    <Label for=\"last-name\">Last Name</Label>\n                                    <Input type=\"text\" id=\"last-name\" value={user.lastName}\n                                        onChange={onChangeLastName} />\n                                </FormGroup>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col xs={12}>\n                                <FormGroup check>\n                                    <Label check>\n                                        <Input type=\"checkbox\" />{' '}\n                                        Administrator\n                                    </Label>\n                                </FormGroup>\n                            </Col>\n                        </Row>\n                    </Form>\n                </CardBody>\n                <CardFooter>\n                    <Button className=\"col-12 col-sm-4 offset-sm-4\" onClick={onSubmit}>Update</Button>\n                </CardFooter>\n            </Card>\n        </Col>\n    )\n}\n\nSettings.propTypes = {\n    getUser: PropTypes.funct.isRequired,\n    user: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user\n})\n\nexport default connect(mapStateToProps, { getUser })(Settings)"]},"metadata":{},"sourceType":"module"}