service: rcs-serverless

custom:
  settings:
    USERS_TABLE: Users
    TASKS_TABLE: Tasks

plugins:
  - serverless-offline
provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-2
  environment: ${self:custom.settings}
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.settings.USERS_TABLE}'
        - 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.settings.ROOMS_TABLE}'
        - 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.settings.EVENTS_TABLE}'

functions:
  auth:
    handler: src/lambdas/auth.authenticate
  login:
    handler: src/lambdas/auth.login
    events:
      - http:
          path: /api/auth/login
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Credentials
  getUsers:
    handler: src/lambdas/users.getUsers
    events:
      - http:
          path: /api/users
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Credentials
          authorizer: auth
  createUser:
    handler: src/lambdas/users.createUser
    events:
      - http:
          path: /api/users
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Credentials
          authorizer: auth
  deleteUser:
    handler: src/lambdas/users.deleteUser
    events:
      - http:
          path: /api/users/{id}
          method: delete
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Credentials
          authorizer: auth
  getTasks:
    handler: src/lambdas/tasks.getTasks
    events:
      - http:
          path: /api/tasks
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Credentials
          authorizer: auth
  createTask:
    handler: src/lambdas/tasks.createTask
    events:
      - http:
          path: /api/tasks
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Credentials
          authorizer: auth
  deleteUser:
    handler: src/lambdas/tasks.deleteUser
    events:
      - http:
          path: /api/tasks/{id}
          method: delete
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Credentials
          authorizer: auth
